# نصب کتابخانه‌های مورد نیاز
!pip install openpyxl scipy seaborn matplotlib xgboost scikit-learn pandas --quiet

# آپلود فایل اکسل
from google.colab import files
uploaded = files.upload()

# خواندن فایل اکسل
import pandas as pd
import io
file_name = list(uploaded.keys())[0]
df = pd.read_excel(io.BytesIO(uploaded[file_name]))

# ستون هدف
target_col = "Result"

# 🔍 نمایش مقادیر ستون هدف برای بررسی اولیه
print("مقدارهای اولیه ستون هدف:", df[target_col].unique())

# فقط نگه‌داشتن ردیف‌هایی با کلاس‌های معتبر (-1, 0, 1)
df = df[df[target_col].isin([-1, 0, 1])]

# جدا کردن X و y
X = df.drop(columns=[target_col])
y = df[target_col].map({-1: 0, 0: 1, 1: 2})  # بازنگاری برای XGBoost

# تحلیل آماری برای انتخاب ویژگی‌های مفید
from scipy.stats import f_oneway, kruskal
results = []
for col in X.columns:
    group_data = [X[y == label][col] for label in sorted(y.unique())]
    try:
        f_stat, p_value = f_oneway(*group_data)
    except:
        f_stat, p_value = kruskal(*group_data)
    results.append({"Feature": col, "P-value": p_value})

results_df = pd.DataFrame(results).sort_values(by="P-value")
useful_features = results_df[results_df["P-value"] < 0.05]["Feature"].tolist()

print("\n✅ ویژگی‌های انتخاب‌شده برای مدل (P < 0.05):")
print(useful_features)

# فقط استفاده از ویژگی‌های مفید
X_selected = X[useful_features]

# تقسیم داده به آموزش و تست
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(
    X_selected, y, test_size=0.2, random_state=42, stratify=y
)

# آموزش مدل XGBoost
from xgboost import XGBClassifier
model = XGBClassifier(random_state=42, use_label_encoder=False, eval_metric="mlogloss")
model.fit(X_train, y_train)

# پیش‌بینی و ارزیابی
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
y_pred = model.predict(X_test)

print("\n🎯 دقت مدل:", accuracy_score(y_test, y_pred))
print("\n📊 گزارش طبقه‌بندی:\n", classification_report(y_test, y_pred))
print("\n🧩 ماتریس سردرگمی:\n", confusion_matrix(y_test, y_pred))

# نمایش اهمیت ویژگی‌ها
import matplotlib.pyplot as plt
import seaborn as sns

importances = model.feature_importances_
feat_imp = pd.DataFrame({"Feature": useful_features, "Importance": importances})
feat_imp = feat_imp.sort_values(by="Importance", ascending=False)

plt.figure(figsize=(10, 5))
sns.barplot(data=feat_imp, x="Importance", y="Feature", palette="viridis")
plt.title("🔎 اهمیت ویژگی‌ها (XGBoost)")
plt.tight_layout()
plt.show()